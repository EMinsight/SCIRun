# code borrowed from ITK4 HDFMacros.cmake

MACRO(EXTERNAL_BOOST_LIBRARY compress_type)
  # May need to build JPEG with PIC on x64 machines with gcc
  # Need to use CMAKE_ANSI_CFLAGS define so that compiler test works

  IF(${compress_type} MATCHES "GIT")
    EXTERNALPROJECT_ADD(
      BOOST
      GIT_REPOSITORY https://github.com/SCIInstitute/boost.git 
    )
#    EXTERNALPROJECT_ADD (JPEG
#        SVN_REPOSITORY ${JPEG_URL}
#        # [SVN_REVISION rev] 
#        INSTALL_COMMAND ""
#        CMAKE_ARGS
#            -DBUILD_SHARED_LIBS:BOOL=OFF
#            -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
#            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY:PATH=${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
#            -DCMAKE_LIBRARY_OUTPUT_DIRECTORY:PATH=${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
#            -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY:PATH=${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
#            -DCMAKE_ANSI_CFLAGS:STRING="${jpeg_pic}"
#    ) 
  ELSEIF (${compress_type} MATCHES "ZIP")
    MESSAGE(STATUS "ZIP compress_type NOT implemented")
#    EXTERNALPROJECT_ADD (JPEG
#        URL ${JPEG_URL}
#        URL_MD5 ""
#        INSTALL_COMMAND ""
#        CMAKE_ARGS
#            -DBUILD_SHARED_LIBS:BOOL=OFF
#            -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
#            -DCMAKE_RUNTIME_OUTPUT_DIRECTORY:PATH=${CMAKE_RUNTIME_OUTPUT_DIRECTORY}
#            -DCMAKE_LIBRARY_OUTPUT_DIRECTORY:PATH=${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
#            -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY:PATH=${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
#            -DCMAKE_ANSI_CFLAGS:STRING="${jpeg_pic}"
#    ) 
  ENDIF()
#  EXTERNALPROJECT_GET_PROPERTY (JPEG BINARY_DIR SOURCE_DIR) 

#  IF (${BLDTYPE} MATCHES "Debug")
#    IF (WIN32 AND NOT MINGW)
#      SET (DBG_EXT "_D")
#    ELSE (WIN32 AND NOT MINGW)
#      SET (DBG_EXT "_debug")
#    ENDIF (WIN32 AND NOT MINGW)
#  ELSE (${BLDTYPE} MATCHES "Debug")
#    SET (DBG_EXT "")
#  ENDIF (${BLDTYPE} MATCHES "Debug")
#  SET (EXTERNAL_LIBRARY_LIST ${EXTERNAL_LIBRARY_LIST} ${JPEG_LIBRARY})

#  IF (WIN32 AND NOT MINGW)
#    SET (JPEG_LIBRARY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${BLDTYPE}/libjpeg${DBG_EXT}${CMAKE_STATIC_LIBRARY_SUFFIX}")
#  ELSE (WIN32 AND NOT MINGW)
#    SET (JPEG_LIBRARY "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/libjpeg${DBG_EXT}${CMAKE_STATIC_LIBRARY_SUFFIX}")
#  ENDIF (WIN32 AND NOT MINGW)
#  SET (JPEG_INCLUDE_DIR_GEN "${BINARY_DIR}")
#  SET (JPEG_INCLUDE_DIR "${SOURCE_DIR}/src")
#  SET (JPEG_FOUND 1)
#  SET (JPEG_LIBRARIES ${JPEG_LIBRARY})
#  SET (JPEG_INCLUDE_DIRS ${JPEG_INCLUDE_DIR_GEN} ${JPEG_INCLUDE_DIR})
ENDMACRO()
